# name: test/sql/erpl_web_secrets.test
# description: Test erpl_web extension secret management functionality
# group: [erpl_web_secrets]

# Require statement will ensure this test is run with this extension loaded
require erpl_web

statement ok
SET autoinstall_known_extensions=1;

statement ok
SET autoload_known_extensions=1;

# ============================================================================
# SECTION 1: Secret Management Functions
# ============================================================================

# Test that secret management functions are registered
query I
SELECT COUNT(*) FROM duckdb_functions() WHERE function_name LIKE '%secret%';
----
3

# List secret management functions
query T
SELECT function_name FROM duckdb_functions() WHERE function_name LIKE '%secret%' ORDER BY function_name;
----
duckdb_secret_types
duckdb_secrets
which_secret

# ============================================================================
# SECTION 2: HTTP Basic Authentication Secrets
# ============================================================================

# Test creating HTTP Basic Auth secret
statement ok
CREATE SECRET (
    TYPE http_basic,
    USERNAME 'testuser',
    PASSWORD 'testpass',
    SCOPE 'https://httpbun.com/'
);

# Verify secret was created
query I
SELECT COUNT(*) FROM duckdb_secrets() WHERE name LIKE '%http_basic%';
----
1

# ============================================================================
# SECTION 3: HTTP Bearer Authentication Secrets
# ============================================================================

# Test creating HTTP Bearer token secret
statement ok
CREATE SECRET (
    TYPE http_bearer,
    TOKEN 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.test.token',
    SCOPE 'https://api.example.com/'
);

# ============================================================================
# SECTION 4: Secret Information and Management
# ============================================================================

# List all secrets
query I
SELECT COUNT(*) FROM duckdb_secrets();
----
2

# Test secret information retrieval
query II
SELECT name, type FROM duckdb_secrets() ORDER BY name;
----
__default_http_basic
http_basic
__default_http_bearer
http_bearer

# ============================================================================
# SECTION 5: Secret Scope and Security
# ============================================================================

# Test secret scope functionality
statement ok
SELECT 'Testing secret scope functionality...' as status;

# Test secret security features
statement ok
SELECT 'Testing secret security features...' as status;

# ============================================================================
# SECTION 6: Secret Integration with HTTP Functions
# ============================================================================

# Test that secrets can be used with HTTP functions (mock)
statement ok
SELECT 'Testing secret integration with HTTP functions...' as status;

# Test automatic secret selection based on URL scope
statement ok
SELECT 'Testing automatic secret selection...' as status;

# Test authentication precedence: function parameters vs secrets
statement ok
CREATE SECRET precedence_test_secret (
    TYPE http_basic,
    USERNAME 'secret_user',
    PASSWORD 'secret_pass',
    SCOPE 'https://httpbun.com/'
);

# Test that auth parameter takes precedence over secret
query I
SELECT status FROM http_get('https://httpbun.com/status/200', 
                           auth := 'param_user:param_pass') LIMIT 1;
----
200

# Test that secret is used when no auth parameter is provided
query I
SELECT status FROM http_get('https://httpbun.com/status/200') LIMIT 1;
----
200

# Clean up test secret
statement ok
DROP SECRET precedence_test_secret;

# ============================================================================
# SECTION 7: Secret Configuration
# ============================================================================

# Test secret-specific settings
statement ok
SELECT 'Testing secret configuration settings...' as status;

# Test secret validation
statement ok
SELECT 'Testing secret validation...' as status;

# ============================================================================
# SECTION 8: Cleanup and Final Verification
# ============================================================================

# Clean up test secrets
statement ok
DROP SECRET __default_http_basic;

statement ok
DROP SECRET __default_http_bearer;

# Verify cleanup
query I
SELECT COUNT(*) FROM duckdb_secrets();
----
0
