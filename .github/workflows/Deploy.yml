name: Windows
on:
  workflow_call:
    inputs:
      # The name with which the extension will be built
      extension_name:
        required: true
        type: string
      archs:
        required: false
        type: string
        default: "[ 'linux_amd64', 'linux_amd64_gcc4', 'linux_arm64', 'osx_amd64', 'osx_arm64', 'windows_amd64' ]"
defaults:
  run:
    shell: bash

jobs:
  deploy-extension:
    name: Deploy extensions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        duckdb_arch: ${{ fromJson(inputs.archs) }}

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.extension_name }}-extension-${{matrix.duckdb_arch}}
          path: /tmp/extension_download

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install and Build
        run: |
          ls /tmp
          ls /tmp/extension_download
          unzip /tmp/extension_download/*.zip
          ls /tmp
          ls /tmp/extension_download

      - name: Generate deploy directory
        run: |
          git config --global --add safe.directory '*'
          cd duckdb
          git fetch --tags
          export DUCKDB_VERSION=`git tag --points-at HEAD`
          export DUCKDB_VERSION=${DUCKDB_VERSION:=`git log -1 --format=%h`}
          cd ..
          if [[ "$GITHUB_REF" =~ ^(refs/tags/v.+)$ ]] ; then
            ./scripts/extension-upload.sh ${{ inputs.extension_name }} ${{ github.ref_name }} $DUCKDB_VERSION ${{matrix.duckdb_arch}} /tmp/publish_build true
            echo "EXT_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          elif [[ "$GITHUB_REF" =~ ^(refs/heads/main)$ ]] ; then
            ./scripts/extension-upload.sh ${{ inputs.extension_name }} `git log -1 --format=%h` $DUCKDB_VERSION ${{matrix.duckdb_arch}} /tmp/publish_build false
            echo "EXT_VERSION=`git log -1 --format=%h`" >> $GITHUB_ENV
          fi

      - name: Deploy to Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          commit-message: Deploying ${{ env.EXT_VERSION }}
          folder: /tmp/publish_build