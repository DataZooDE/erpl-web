# TODO: move to external repo
name: Windows
on:
  workflow_call:
    inputs:
      # The name with which the extension will be built
      extension_name:
        required: true
        type: string
      # The DuckDB version against which the extension is built
      duckdb_version:
        required: false
        type: string
        default: '<submodule_version>'
      # Whether the extension is deployed to the specified s3 bucket
      release_s3:
        required: false
        type: boolean
        default: true
defaults:
  run:
    shell: bash

jobs:
  windows:
    name: Release (amd64)
    runs-on: windows-latest
    env:
      GEN: Ninja

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Checkout DuckDB to version
        # Add commits/tags to build against other DuckDB versions
        if: ${{ inputs.duckdb_version != '<submodule_version>'}}
        run: |
          cd duckdb
          git checkout ${{ inputs.duckdb_version }}

      - name: Build extension
        run: |
          make release

      - name: Test Extension
        shell: bash
        run: |
          make test

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.extension_name }}-extension-windows
          path: |
            build/release/extension/${{ inputs.extension_name }}/${{ inputs.extension_name }}.duckdb_extension

      - name: Deploy
        if: ${{ inputs.release_s3 }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_DEPLOY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_DEPLOY_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.S3_REGION }}
          BUCKET_NAME: ${{ secrets.S3_BUCKET }}
        run: |
          cd duckdb
          git fetch --tags
          export DUCKDB_VERSION=`git tag --points-at HEAD`
          export DUCKDB_VERSION=${DUCKDB_VERSION:=`git log -1 --format=%h`}
          cd ..
          if [[ "$AWS_ACCESS_KEY_ID" == "" ]] ; then
            echo 'No key set, skipping'
          elif [[ "$GITHUB_REF" =~ ^(refs/tags/v.+)$ ]] ; then
            python -m pip install awscli
            ./scripts/extension-upload.sh ${{ inputs.extension_name }} ${{ github.ref_name }} $DUCKDB_VERSION windows_amd64 $BUCKET_NAME true 
          elif [[ "$GITHUB_REF" =~ ^(refs/heads/main)$ ]] ; then
            python -m pip install awscli
            ./scripts/extension-upload.sh ${{ inputs.extension_name }} `git log -1 --format=%h` $DUCKDB_VERSION windows_amd64 $BUCKET_NAME false 
          fi