# TODO: move to external repo
name: Linux
on:
  workflow_call:
    inputs:
      # The name with which the extension will be built
      extension_name:
        required: true
        type: string
      # The DuckDB version against which the extension is built
      duckdb_version:
        required: false
        type: string
        default: '<submodule_version>'
      # Whether the extension is deployed to the specified s3 bucket
      release_s3:
        required: false
        type: boolean
        default: true

defaults:
  run:
    shell: bash

jobs:
  linux:
    name: Release
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      matrix:
        arch: ['linux_amd64', 'linux_arm64', 'linux_amd64_gcc4']
        include:
          - arch: 'linux_amd64_gcc4'
            container: 'quay.io/pypa/manylinux2014_x86_64'
          - arch: 'linux_amd64'
            container: 'ubuntu:18.04'
          - arch: 'linux_arm64'
            container: 'ubuntu:18.04'
    env:
      GEN: Ninja

    steps:
    # TODO add cancel specific builds based on https://stackoverflow.com/questions/60589373/how-to-force-to-exit-in-github-actions-step?
    - name: Install required ubuntu packages
      if: ${{ matrix.arch == 'linux_amd64' || matrix.arch == 'linux_arm64' }}
      run: |
        apt-get update -y -qq
        apt-get install -y -qq software-properties-common
        add-apt-repository ppa:git-core/ppa
        apt-get update -y -qq
        apt-get install -y -qq ninja-build make gcc-multilib g++-multilib libssl-dev wget openjdk-8-jdk zip maven unixodbc-dev libc6-dev-i386 lib32readline6-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip build-essential checkinstall libffi-dev curl libz-dev openssh-client

    - name: Install Git 2.18.5
      if: ${{ matrix.arch == 'linux_amd64' || matrix.arch == 'linux_arm64' }}
      run: |
        wget https://github.com/git/git/archive/refs/tags/v2.18.5.tar.gz
        tar xvf v2.18.5.tar.gz
        cd git-2.18.5
        make
        make prefix=/usr install
        git --version

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Checkout DuckDB to version
      if: ${{ inputs.duckdb_version != '<submodule_version>'}}
      run: |
        cd duckdb
        git checkout ${{ inputs.duckdb_version }}

    - name: Setup ManyLinux2014
      if: ${{ matrix.arch == 'linux_amd64_gcc4' }}
      run: |
        ./duckdb/scripts/setup_manylinux2014.sh general aws-cli ccache ssh python_alias

    - name: Setup Ubuntu
      if: ${{ matrix.arch == 'linux_amd64' || matrix.arch == 'linux_arm64' }}
      uses: ./duckdb/.github/actions/ubuntu_18_setup
      with:
        aarch64_cross_compile: ${{ matrix.arch == 'linux_arm64' && 1 }}

    - name: Build extension
      env:
        GEN: ninja
        STATIC_LIBCPP: 1
        CC: ${{ matrix.arch == 'linux_arm64' && 'aarch64-linux-gnu-gcc' || '' }}
        CXX: ${{ matrix.arch == 'linux_arm64' && 'aarch64-linux-gnu-g++' || '' }}
      run: |
        make release

    - name: Test extension
      if: ${{ matrix.arch != 'linux_arm64'}}
      run: |
        make test

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.extension_name }}-extension-${{matrix.arch}}
        path: |
          build/release/extension/${{ inputs.extension_name }}/${{ inputs.extension_name }}.duckdb_extension

    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.S3_DEPLOY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_DEPLOY_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.S3_REGION }}
        BUCKET_NAME: ${{ secrets.S3_BUCKET }}
      run: |
        git config --global --add safe.directory '*'
        cd duckdb
        git fetch --tags
        export DUCKDB_VERSION=`git tag --points-at HEAD`
        export DUCKDB_VERSION=${DUCKDB_VERSION:=`git log -1 --format=%h`}
        cd ..
        if [[ "$AWS_ACCESS_KEY_ID" == "" ]] ; then
          echo 'No key set, skipping'
        elif [[ "$GITHUB_REF" =~ ^(refs/tags/v.+)$ ]] ; then
          python3 -m pip install pip awscli
          ./scripts/extension-upload.sh ${{ inputs.extension_name }} ${{ github.ref_name }} $DUCKDB_VERSION ${{matrix.arch}} $BUCKET_NAME true
        elif [[ "$GITHUB_REF" =~ ^(refs/heads/main)$ ]] ; then
          python3 -m pip install pip awscli
          ./scripts/extension-upload.sh ${{ inputs.extension_name }} `git log -1 --format=%h` $DUCKDB_VERSION ${{matrix.arch}} $BUCKET_NAME false
        fi